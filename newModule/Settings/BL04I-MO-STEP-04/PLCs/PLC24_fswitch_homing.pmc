;####################################################
; DO NOT MODIFY: File created from src/PLC24_fswitch_homing.psub
;####################################################







;HOMING PLC
;ASSUMPTIONS:	ROCKER POS DIRECTION PUSHES THE FILTER IN (UP)
;				TRANSLATION POS DIRECTION MOVES ROCKER AWAY FROM MOTOR
;				TRANSLATION SET TO HOME ON FALLING EDGE OF NEGATIVE LIMIT
;				TRANSLATION HOMING SPEED IS POSITIVE
;VER 2:			CHANGED TO USE ENCODER. ROCKER SHOULD HOME ON A REFERENCE MARK, USE 
;				IXX26 TO MAKE SURE ROCKER ENDS UP ON HOME SWITCH. TRANSLATION SHOULD
;				HOME ON NEG LIMIT LOW AND REFERENCE.
;I7112=11
;I7113=2
;I7122=1

; Macros (and example values):
; - HOME_PLC_NO	 	= 24  PLC Number for this PLC, e.g 23
; - MAIN_PLC_NO 	= 20  PLC Number for the main PLC, e.g 20
; - 5		= $(5,undefined)  Axisnum for translation axis, e.g 5
; - ROCKER_A 		= 6  Axisnum for rocker axis, e.g. 6
; - 7		= $(7,undefined)  Axisnum for translation axis, e.g 7
; -ROCKER_B 		= 8  Axisnum for rocker axis, e.g. 8
; - ROCKER_HOMING_TIMEOUT 	= 10000  Timeout period for jams in ms, e.g 10000
; - TRANSLATION_HOMING_TIMEOUT	= 60000  Timeout period for jams in ms, e.g 60000
; - ROCKER_SLOW_VEL 	= 0.5  Slow velocity for homing rocker, e.g. 0.1

#DEFINE PLC_NO	24

#DEFINE FILTER_INCREMENT	1000

;GENERIC AXIS COMMANDS
#DEFINE JOG_AXIS_POS	&COMMAND"J+"
#DEFINE JOG_AXIS_NEG	&COMMAND"J-"
#DEFINE STOP_AXIS	&COMMAND"J/"
#DEFINE JOG_PRESET	&COMMAND"J^*"
#DEFINE KILL_AXIS	&COMMAND"K"
#DEFINE JOG_TO_PRESET	&COMMAND"J=*"
#DEFINE HOME_AXIS	&COMMAND"HM"
#DEFINE HOMEZ_AXIS	&COMMAND"HMZ"
#DEFINE JOG_TO_TRIGGER_POS	&COMMAND"J^2400^0"
#DEFINE JOG_TO_TRIGGER_NEG	&COMMAND"J:-2400^0"

#DEFINE CURRENT_ROCKER	P(100*PLC_NO + 20)
#DEFINE CAPTURE_CONTROL I(7000 + (100*(INT((CURRENT_ROCKER-1)/4))) + (10*((CURRENT_ROCKER+(INT(CURRENT_ROCKER/5)))%5)) + 2)

;ROCKER VARIABLES
#DEFINE ROCKER_HOME M(100*CURRENT_ROCKER + 20)
#DEFINE ROCKER_IN_SWITCH	M(100*CURRENT_ROCKER + 21)
#DEFINE ROCKER_OUT_SWITCH	M(100*CURRENT_ROCKER + 22)
#DEFINE ROCKER_LIMIT_CONTROL	I(100*CURRENT_ROCKER+24)
#DEFINE ROCKER_HOME_OFFSET	I(100*CURRENT_ROCKER+26)
#DEFINE ROCKER_SLOW_VELOCITY  P(100*PLC_NO +18)
#DEFINE ROCKER_VELOCITY_STORE P(100*PLC_NO +16)
#DEFINE ROCKER_IN_POSITION M(100*CURRENT_ROCKER + 40)
#DEFINE ROCKER_JOG_VELOCITY I(100*CURRENT_ROCKER +22)
#DEFINE ROCKER_HOMED M(100*CURRENT_ROCKER + 45)

;5 VARIABLES
#DEFINE TRANSLATION_A_SPEED	I(100*5 + 22)
#DEFINE TRANSLATION_A_IN_POS	M(100 * 5 + 40)
#DEFINE TRANSLATION_A_HOMED	M(100 * 5 + 45)
#DEFINE TRANSLATION_A_PLIM	M(100 * 5 + 21)
#DEFINE TRANSLATION_A_NLIM	M(100 * 5 + 22)
#DEFINE TRANSLATION_A_OFFSET	P(100 * PLC_NO + 21)

;7 VARIABLES
#DEFINE TRANSLATION_B_SPEED	I(100*7 + 22)
#DEFINE TRANSLATION_B_IN_POS	M(100 * 7 + 40)
#DEFINE TRANSLATION_B_HOMED	M(100 * 7 + 45)
#DEFINE TRANSLATION_B_PLIM	M(100 * 7 + 21)
#DEFINE TRANSLATION_B_NLIM	M(100 * 7 + 22)
#DEFINE TRANSLATION_B_OFFSET	P(100 * PLC_NO + 22)

#DEFINE TIMED_OUT P(100*PLC_NO + 11)
#DEFINE PLC_RUNNING	P(100*PLC_NO +13)
#DEFINE MOVE_ROCKER_OUT	P(100*PLC_NO +15)

#DEFINE HOME_OFFSET_STORE	P(100*PLC_NO +17)

#DEFINE MAIN_PLC_NO	20
#DEFINE ABORT	P(100*MAIN_PLC_NO+8)

#DEFINE ACTUATOR_A_DISABLED		P(100*MAIN_PLC_NO + 81) 
#DEFINE ACTUATOR_B_DISABLED		P(100*MAIN_PLC_NO + 82)

;TIMER 
#DEFINE TIMER	I(5111+(10&30)*50+10%2)
#DEFINE MILLISECONDS	* 8388608/i10

#DEFINE NUMBER_OF_FILTERS_COUNTER    P(100*MAIN_PLC_NO + 16)
#DEFINE FIRST_FILTER                 P(100*MAIN_PLC_NO + 17)
#DEFINE NUMBER_OF_FILTERS_STORE      P(100*MAIN_PLC_NO + 18)
#DEFINE CURRENT_FILTER_READBACK      P(100*MAIN_PLC_NO + 42)

ROCKER_SLOW_VELOCITY = 0.5

;Distance between home and first filter
TRANSLATION_A_OFFSET = 1000

;Distance between home and last filter
TRANSLATION_B_OFFSET = -1000

OPEN PLC PLC_NO 
CLEAR

PLC_RUNNING = 1

TIMED_OUT = 0

IF(ACTUATOR_A_DISABLED = 0)
	CURRENT_ROCKER = 6
ELSE
	CURRENT_ROCKER = 8
ENDIF


;Do initial home on rockers to the home switch {
WHILE (CURRENT_ROCKER = 6) OR (CURRENT_ROCKER = 8)
	;*********************************************************
	;HOME ROCKER ON PHYSICAL HOME SWITCH
	;*********************************************************
	
	CAPTURE_CONTROL = 2	;SET SELECTOR TO HOME OR FLAG (HOME FLAG)
	ROCKER_VELOCITY_STORE = ROCKER_JOG_VELOCITY
	ROCKER_JOG_VELOCITY = ROCKER_SLOW_VELOCITY

	ROCKER_LIMIT_CONTROL = $800401
	
	IF(CURRENT_ROCKER = 6)
		ADDRESS#6
	ELSE
		ADDRESS#8
	ENDIF
	
	JOG_AXIS_NEG
	WHILE(ROCKER_OUT_SWITCH = 0)
	ENDWHILE

	ROCKER_JOG_VELOCITY = ROCKER_VELOCITY_STORE

	HOME_OFFSET_STORE = ROCKER_HOME_OFFSET
	ROCKER_HOME_OFFSET = 0 

	IF(CURRENT_ROCKER = 6)
		ADDRESS#6
	ELSE
		ADDRESS#8
	ENDIF
	
	HOME_AXIS
	TIMER = 100 MILLISECONDS				
	WHILE(TIMER > 0)
	ENDWHILE

	TIMER = ROCKER_HOMING_TIMEOUT MILLISECONDS
	WHILE(ROCKER_HOME = 0 AND TIMER > 0)
	ENDWHILE

	;IF ROCKER TIMED OUT DURING HOMING
	IF(TIMER = 0)
		IF(CURRENT_ROCKER = 6)
			ADDRESS#6
		ELSE
			ADDRESS#8
		ENDIF
		STOP_AXIS
		TIMED_OUT = 1
	ENDIF

	ROCKER_LIMIT_CONTROL = $820401
	ROCKER_HOME_OFFSET = HOME_OFFSET_STORE
	TIMER = 1000 MILLISECONDS				
	WHILE(TIMER > 0)
	ENDWHILE
	;*********************************************************
	IF(CURRENT_ROCKER = 6) AND (ACTUATOR_B_DISABLED = 0)
		CURRENT_ROCKER = 8
	ELSE
		CURRENT_ROCKER = 99
	ENDIF
	
ENDWHILE
; }

;Home translation A {
IF(ACTUATOR_A_DISABLED = 0)
	IF(TIMED_OUT = 0)

		TIMER = TRANSLATION_HOMING_TIMEOUT MILLISECONDS
				
		;JOG AXIS TO NEGATIVE LIMIT		
		ADDRESS#5
		JOG_AXIS_NEG

		WHILE(TRANSLATION_A_NLIM = 0 AND TIMER > 0)
		ENDWHILE

		IF(TIMER > 0)
			WHILE(TRANSLATION_A_IN_POS = 0)
			ENDWHILE

			;HOME AXIS ON FALLING EDGE OF NEGATIVE LIMIT
			ADDRESS#5
			HOME_AXIS

			WHILE(TRANSLATION_A_HOMED = 0)
			ENDWHILE

			TIMER = 1000 MILLISECONDS				
			WHILE(TIMER > 0)
			ENDWHILE
		ELSE
			ADDRESS#5
			STOP_AXIS
			TIMED_OUT = 1
		ENDIF

	ENDIF
ENDIF
; }

;Home translation B {
IF(ACTUATOR_B_DISABLED = 0)
	IF(TIMED_OUT = 0)

		TIMER = TRANSLATION_HOMING_TIMEOUT MILLISECONDS
				
		;JOG AXIS TO NEGATIVE LIMIT		
		ADDRESS#7
		JOG_AXIS_POS

		WHILE(TRANSLATION_B_PLIM = 0 AND TIMER > 0)
		ENDWHILE

		IF(TIMER > 0)
			WHILE(TRANSLATION_B_IN_POS = 0)
			ENDWHILE

			;HOME AXIS ON FALLING EDGE OF POSITIVE LIMIT
			ADDRESS#7
			HOME_AXIS

			WHILE(TRANSLATION_B_HOMED = 0)
			ENDWHILE

			TIMER = 1000 MILLISECONDS				
			WHILE(TIMER > 0)
			ENDWHILE
		ELSE
			ADDRESS#7
			STOP_AXIS
			TIMED_OUT = 1
		ENDIF
	ENDIF
ENDIF
; }

;Do final home on the rockers with the reference mark {

IF(ACTUATOR_A_DISABLED = 0)
	CURRENT_ROCKER = 6
ELSE
	CURRENT_ROCKER = 8
ENDIF

WHILE (CURRENT_ROCKER = 6) OR (CURRENT_ROCKER = 8)
	IF(TIMED_OUT = 0)
		CAPTURE_CONTROL = 1	;SET SELECTOR TO HOME ON REFERENCE MARK
		IF(CURRENT_ROCKER = 6)
			ADDRESS#6
		ELSE
			ADDRESS#8
		ENDIF
		
		HOME_AXIS
		TIMER = 100 MILLISECONDS				
		WHILE(TIMER > 0)
		ENDWHILE

		TIMER = ROCKER_HOMING_TIMEOUT MILLISECONDS
		WHILE(ROCKER_HOMED = 0 AND TIMER > 0)
		ENDWHILE

		;IF CURRENT_ROCKER TIMED OUT DURING HOMING
		IF(TIMER = 0)
			IF(CURRENT_ROCKER = 6)
				ADDRESS#6
			ELSE
				ADDRESS#8
			ENDIF
			STOP_AXIS
			TIMED_OUT = 1
		ENDIF

		TIMER = 1000 MILLISECONDS				
		WHILE(TIMER > 0)
		ENDWHILE
		CAPTURE_CONTROL = 2	;SET SELECTOR TO HOME OR FLAG (HOME FLAG)
	ENDIF
	
	IF(CURRENT_ROCKER = 6) AND (ACTUATOR_B_DISABLED = 0)
		CURRENT_ROCKER = 8
	ELSE
		CURRENT_ROCKER = 99
	ENDIF
ENDWHILE
; }




ABORT=0
PLC_RUNNING = 0

DISABLE PLC PLC_NO

CLOSE

